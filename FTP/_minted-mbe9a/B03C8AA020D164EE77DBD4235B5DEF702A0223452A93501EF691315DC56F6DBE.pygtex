\begin{Verbatim}[commandchars=\\\{\}]
\PYGdefault{c+c1}{// Michael Eller mbe9a}
\PYGdefault{c+c1}{// OS Machine Problem 4}
\PYGdefault{c+c1}{// 29 November 2016}
\PYGdefault{c+c1}{// ftp.cpp (main)}

\PYGdefault{c+cp}{\PYGdefaultZsh{}include} \PYGdefault{c+cpf}{\PYGdefaultZdq{}ftp.h\PYGdefaultZdq{}}

\PYGdefault{c+cm}{/*}
\PYGdefault{c+cm}{ * This is a bare\PYGdefaultZhy{}bones implementation of an FTP server.}
\PYGdefault{c+cm}{ * For security and testing purposes, the accepted IP address is hard\PYGdefaultZhy{}coded to be the loopback address (127.0.0.1).}
\PYGdefault{c+cm}{ * The port that the server operates on is set by the only command\PYGdefaultZhy{}line parameter.}
\PYGdefault{c+cm}{ * This server can only service one client session at a time but can accept consecutive sessions without closing.}
\PYGdefault{c+cm}{ *}
\PYGdefault{c+cm}{ * Implementation:}
\PYGdefault{c+cm}{ *		TYPE \PYGdefaultZhy{} ASCII Non\PYGdefaultZhy{}print}
\PYGdefault{c+cm}{ *		MODE \PYGdefaultZhy{} Stream}
\PYGdefault{c+cm}{ *		STRUCTURE \PYGdefaultZhy{} File, Record}
\PYGdefault{c+cm}{ *		COMMANDS \PYGdefaultZhy{} QUIT, PORT, TYPE,}
\PYGdefault{c+cm}{ *				   MODE, STRU, USER (for default values)}
\PYGdefault{c+cm}{ *			and}
\PYGdefault{c+cm}{ *				   RETR, STOR, NOOP, and LIST}
\PYGdefault{c+cm}{ *}
\PYGdefault{c+cm}{ * It was assumed that the ftp client would be operated with the anonymous flag, so the server\PYGdefaultZsq{}s response}
\PYGdefault{c+cm}{ * to USER is simply a return code of 200. Similarly for MODE and STRU, the assumption is that the mode will only be \PYGdefaultZsq{}S\PYGdefaultZsq{}}
\PYGdefault{c+cm}{ * (Stream) and the file structure will only be \PYGdefaultZsq{}F\PYGdefaultZsq{} (File), so they return code 504 if the client attempts to set them to}
\PYGdefault{c+cm}{ * anything else.}
\PYGdefault{c+cm}{ *}
\PYGdefault{c+cm}{ * Additionally, if the client attempts to perform a STOR or a RETR without first having set the TYPE to \PYGdefaultZsq{}I\PYGdefaultZsq{} (Image),}
\PYGdefault{c+cm}{ * the server will return code 451: Requested action aborted. Local error in processing. For LIST, the root directory for}
\PYGdefault{c+cm}{ * the server is the same directory in which the executable was started.}
\PYGdefault{c+cm}{ */}

\PYGdefault{k+kt}{int} \PYGdefault{n+nf}{main}\PYGdefault{p}{(}\PYGdefault{k+kt}{int} \PYGdefault{n}{argc}\PYGdefault{p}{,} \PYGdefault{k+kt}{char} \PYGdefault{o}{*}\PYGdefault{n}{argv}\PYGdefault{p}{[])}
\PYGdefault{p}{\PYGdefaultZob{}}
	\PYGdefault{c+c1}{// declare server variables}
	\PYGdefault{k+kt}{char} \PYGdefault{n}{buffer}\PYGdefault{p}{[}\PYGdefault{l+m+mi}{100}\PYGdefault{p}{];}
	\PYGdefault{k+kt}{char}\PYGdefault{o}{*} \PYGdefault{n}{token}\PYGdefault{p}{;}
	\PYGdefault{k+kt}{int} \PYGdefault{n}{command}\PYGdefault{p}{;}
	\PYGdefault{k+kt}{bool} \PYGdefault{n}{TYPEI} \PYGdefault{o}{=} \PYGdefault{n+nb}{false}\PYGdefault{p}{;}
	\PYGdefault{k}{struct} \PYGdefault{n}{sockaddr\PYGdefaultZus{}in} \PYGdefault{n}{control\PYGdefaultZus{}addr}\PYGdefault{p}{,} \PYGdefault{n}{client\PYGdefaultZus{}addr}\PYGdefault{p}{;}
	\PYGdefault{k+kt}{int} \PYGdefault{n}{socket\PYGdefaultZus{}control\PYGdefaultZus{}fd} \PYGdefault{o}{=} \PYGdefault{n}{socket}\PYGdefault{p}{(}\PYGdefault{n}{AF\PYGdefaultZus{}INET}\PYGdefault{p}{,} \PYGdefault{n}{SOCK\PYGdefaultZus{}STREAM}\PYGdefault{p}{,} \PYGdefault{l+m+mi}{6}\PYGdefault{p}{);}
	\PYGdefault{k+kt}{int} \PYGdefault{n}{socket\PYGdefaultZus{}client\PYGdefaultZus{}fd}\PYGdefault{p}{;}

	\PYGdefault{c+c1}{// set all bytes of the socket address struct to 0}
	\PYGdefault{n}{memset}\PYGdefault{p}{(}\PYGdefault{o}{\PYGdefaultZam{}}\PYGdefault{n}{control\PYGdefaultZus{}addr}\PYGdefault{p}{,} \PYGdefault{l+m+mi}{0}\PYGdefault{p}{,} \PYGdefault{k}{sizeof} \PYGdefault{n}{control\PYGdefaultZus{}addr}\PYGdefault{p}{);}

	\PYGdefault{c+c1}{// intialize the local control address struct}
	\PYGdefault{n}{control\PYGdefaultZus{}addr}\PYGdefault{p}{.}\PYGdefault{n}{sin\PYGdefaultZus{}family} \PYGdefault{o}{=} \PYGdefault{n}{AF\PYGdefaultZus{}INET}\PYGdefault{p}{;}
	\PYGdefault{n}{control\PYGdefaultZus{}addr}\PYGdefault{p}{.}\PYGdefault{n}{sin\PYGdefaultZus{}port} \PYGdefault{o}{=} \PYGdefault{n}{htons}\PYGdefault{p}{(}\PYGdefault{n}{atoi}\PYGdefault{p}{(}\PYGdefault{n}{argv}\PYGdefault{p}{[}\PYGdefault{l+m+mi}{1}\PYGdefault{p}{]));}
	\PYGdefault{n}{control\PYGdefaultZus{}addr}\PYGdefault{p}{.}\PYGdefault{n}{sin\PYGdefaultZus{}addr}\PYGdefault{p}{.}\PYGdefault{n}{s\PYGdefaultZus{}addr} \PYGdefault{o}{=} \PYGdefault{n}{inet\PYGdefaultZus{}addr}\PYGdefault{p}{(}\PYGdefault{l+s}{\PYGdefaultZdq{}127.0.0.1\PYGdefaultZdq{}}\PYGdefault{p}{);}

	\PYGdefault{c+c1}{// check and see if they were initialized correctly}
	\PYGdefault{k}{if} \PYGdefault{p}{(}\PYGdefault{n}{socket\PYGdefaultZus{}control\PYGdefaultZus{}fd} \PYGdefault{o}{==} \PYGdefault{o}{\PYGdefaultZhy{}}\PYGdefault{l+m+mi}{1}\PYGdefault{p}{)}
	\PYGdefault{p}{\PYGdefaultZob{}}
		\PYGdefault{n}{perror}\PYGdefault{p}{(}\PYGdefault{l+s}{\PYGdefaultZdq{}cannot create socket\PYGdefaultZdq{}}\PYGdefault{p}{);}
		\PYGdefault{n}{exit}\PYGdefault{p}{(}\PYGdefault{n}{EXIT\PYGdefaultZus{}FAILURE}\PYGdefault{p}{);}
	\PYGdefault{p}{\PYGdefaultZcb{}}
	\PYGdefault{c+c1}{// bind and the control socket to the control address struct, check if unsuccessful}
	\PYGdefault{k}{if} \PYGdefault{p}{(}\PYGdefault{n}{bind}\PYGdefault{p}{(}\PYGdefault{n}{socket\PYGdefaultZus{}control\PYGdefaultZus{}fd}\PYGdefault{p}{,} \PYGdefault{p}{(}\PYGdefault{k}{struct} \PYGdefault{n}{sockaddr} \PYGdefault{o}{*}\PYGdefault{p}{)}\PYGdefault{o}{\PYGdefaultZam{}}\PYGdefault{n}{control\PYGdefaultZus{}addr}\PYGdefault{p}{,} \PYGdefault{k}{sizeof} \PYGdefault{n}{control\PYGdefaultZus{}addr}\PYGdefault{p}{)} \PYGdefault{o}{==} \PYGdefault{o}{\PYGdefaultZhy{}}\PYGdefault{l+m+mi}{1}\PYGdefault{p}{)}
	\PYGdefault{p}{\PYGdefaultZob{}}
		\PYGdefault{n}{perror}\PYGdefault{p}{(}\PYGdefault{l+s}{\PYGdefaultZdq{}control bind failed\PYGdefaultZdq{}}\PYGdefault{p}{);}
		\PYGdefault{n}{close}\PYGdefault{p}{(}\PYGdefault{n}{socket\PYGdefaultZus{}control\PYGdefaultZus{}fd}\PYGdefault{p}{);}
		\PYGdefault{n}{exit}\PYGdefault{p}{(}\PYGdefault{n}{EXIT\PYGdefaultZus{}FAILURE}\PYGdefault{p}{);}
	\PYGdefault{p}{\PYGdefaultZcb{}}
	\PYGdefault{c+c1}{// listen on the control socket, check if unsuccessful}
	\PYGdefault{k}{if} \PYGdefault{p}{(}\PYGdefault{n}{listen}\PYGdefault{p}{(}\PYGdefault{n}{socket\PYGdefaultZus{}control\PYGdefaultZus{}fd}\PYGdefault{p}{,} \PYGdefault{l+m+mi}{1}\PYGdefault{p}{)} \PYGdefault{o}{==} \PYGdefault{o}{\PYGdefaultZhy{}}\PYGdefault{l+m+mi}{1}\PYGdefault{p}{)}
	\PYGdefault{p}{\PYGdefaultZob{}}
		\PYGdefault{n}{perror}\PYGdefault{p}{(}\PYGdefault{l+s}{\PYGdefaultZdq{}control listen failed\PYGdefaultZdq{}}\PYGdefault{p}{);}
		\PYGdefault{n}{close}\PYGdefault{p}{(}\PYGdefault{n}{socket\PYGdefaultZus{}control\PYGdefaultZus{}fd}\PYGdefault{p}{);}
		\PYGdefault{n}{exit}\PYGdefault{p}{(}\PYGdefault{n}{EXIT\PYGdefaultZus{}FAILURE}\PYGdefault{p}{);}
	\PYGdefault{p}{\PYGdefaultZcb{}}

	\PYGdefault{c+c1}{// outer loop, this enables multiple sessions (consecutively not simultaneously)}
	\PYGdefault{k}{while} \PYGdefault{p}{(}\PYGdefault{l+m+mi}{1}\PYGdefault{p}{)}
	\PYGdefault{p}{\PYGdefaultZob{}}
		\PYGdefault{c+c1}{// accept the control connection, check if unsuccessful}
		\PYGdefault{k+kt}{int} \PYGdefault{n}{control\PYGdefaultZus{}connection\PYGdefaultZus{}fd} \PYGdefault{o}{=} \PYGdefault{n}{accept}\PYGdefault{p}{(}\PYGdefault{n}{socket\PYGdefaultZus{}control\PYGdefaultZus{}fd}\PYGdefault{p}{,} \PYGdefault{n+nb}{NULL}\PYGdefault{p}{,} \PYGdefault{n+nb}{NULL}\PYGdefault{p}{);}
		\PYGdefault{k}{if} \PYGdefault{p}{(}\PYGdefault{n}{control\PYGdefaultZus{}connection\PYGdefaultZus{}fd} \PYGdefault{o}{\PYGdefaultZlt{}} \PYGdefault{l+m+mi}{0}\PYGdefault{p}{)}
		\PYGdefault{p}{\PYGdefaultZob{}}
			\PYGdefault{n}{perror}\PYGdefault{p}{(}\PYGdefault{l+s}{\PYGdefaultZdq{}control accept failed\PYGdefaultZdq{}}\PYGdefault{p}{);}
			\PYGdefault{n}{close}\PYGdefault{p}{(}\PYGdefault{n}{socket\PYGdefaultZus{}control\PYGdefaultZus{}fd}\PYGdefault{p}{);}
			\PYGdefault{n}{exit}\PYGdefault{p}{(}\PYGdefault{n}{EXIT\PYGdefaultZus{}FAILURE}\PYGdefault{p}{);}
		\PYGdefault{p}{\PYGdefaultZcb{}}
		\PYGdefault{c+c1}{// return code 220 \PYGdefaultZhy{} service ready for new user}
		\PYGdefault{n}{write}\PYGdefault{p}{(}\PYGdefault{n}{control\PYGdefaultZus{}connection\PYGdefaultZus{}fd}\PYGdefault{p}{,} \PYGdefault{n}{SRC220}\PYGdefault{p}{,} \PYGdefault{n}{SRC220LEN}\PYGdefault{p}{);}

		\PYGdefault{c+c1}{// inner loop \PYGdefaultZhy{} service current session}
		\PYGdefault{k}{while}\PYGdefault{p}{(}\PYGdefault{l+m+mi}{1}\PYGdefault{p}{)}
		\PYGdefault{p}{\PYGdefaultZob{}}
			\PYGdefault{c+c1}{// get command from client}
			\PYGdefault{n}{command} \PYGdefault{o}{=} \PYGdefault{n}{read}\PYGdefault{p}{(}\PYGdefault{n}{control\PYGdefaultZus{}connection\PYGdefaultZus{}fd}\PYGdefault{p}{,} \PYGdefault{o}{\PYGdefaultZam{}}\PYGdefault{n}{buffer}\PYGdefault{p}{,} \PYGdefault{l+m+mi}{100}\PYGdefault{p}{);}
			\PYGdefault{k}{if} \PYGdefault{p}{(}\PYGdefault{n}{command} \PYGdefault{o}{\PYGdefaultZlt{}} \PYGdefault{l+m+mi}{0}\PYGdefault{p}{)}
			\PYGdefault{p}{\PYGdefaultZob{}}
				\PYGdefault{n}{perror}\PYGdefault{p}{(}\PYGdefault{l+s}{\PYGdefaultZdq{}receive on control socket failed\PYGdefaultZdq{}}\PYGdefault{p}{);}
				\PYGdefault{n}{close}\PYGdefault{p}{(}\PYGdefault{n}{control\PYGdefaultZus{}connection\PYGdefaultZus{}fd}\PYGdefault{p}{);}
				\PYGdefault{n}{close}\PYGdefault{p}{(}\PYGdefault{n}{socket\PYGdefaultZus{}control\PYGdefaultZus{}fd}\PYGdefault{p}{);}
				\PYGdefault{n}{exit}\PYGdefault{p}{(}\PYGdefault{n}{EXIT\PYGdefaultZus{}FAILURE}\PYGdefault{p}{);}
			\PYGdefault{p}{\PYGdefaultZcb{}}
			\PYGdefault{c+c1}{// ignore carriage returns and new line characters}
			\PYGdefault{k}{for} \PYGdefault{p}{(}\PYGdefault{k+kt}{int} \PYGdefault{n}{x} \PYGdefault{o}{=} \PYGdefault{l+m+mi}{0}\PYGdefault{p}{;} \PYGdefault{p}{(}\PYGdefault{k+kt}{unsigned}\PYGdefault{p}{)}\PYGdefault{n}{x} \PYGdefault{o}{\PYGdefaultZlt{}} \PYGdefault{n}{strlen}\PYGdefault{p}{(}\PYGdefault{n}{buffer}\PYGdefault{p}{);} \PYGdefault{n}{x}\PYGdefault{o}{++}\PYGdefault{p}{)}
				\PYGdefault{k}{if} \PYGdefault{p}{(} \PYGdefault{n}{buffer}\PYGdefault{p}{[}\PYGdefault{n}{x}\PYGdefault{p}{]} \PYGdefault{o}{==} \PYGdefault{l+s+sc}{\PYGdefaultZsq{}\PYGdefaultZbs{}n\PYGdefaultZsq{}} \PYGdefault{o}{||} \PYGdefault{n}{buffer}\PYGdefault{p}{[}\PYGdefault{n}{x}\PYGdefault{p}{]} \PYGdefault{o}{==} \PYGdefault{l+s+sc}{\PYGdefaultZsq{}\PYGdefaultZbs{}r\PYGdefaultZsq{}} \PYGdefault{p}{)} \PYGdefault{n}{buffer}\PYGdefault{p}{[}\PYGdefault{n}{x}\PYGdefault{p}{]} \PYGdefault{o}{=} \PYGdefault{l+s+sc}{\PYGdefaultZsq{}\PYGdefaultZbs{}0\PYGdefaultZsq{}}\PYGdefault{p}{;}
			\PYGdefault{n}{cout} \PYGdefault{o}{\PYGdefaultZlt{}\PYGdefaultZlt{}} \PYGdefault{n}{buffer} \PYGdefault{o}{\PYGdefaultZlt{}\PYGdefaultZlt{}} \PYGdefault{n}{endl}\PYGdefault{p}{;}
			\PYGdefault{c+c1}{// split on spaces}
			\PYGdefault{n}{token} \PYGdefault{o}{=} \PYGdefault{n}{strtok}\PYGdefault{p}{((}\PYGdefault{k+kt}{char}\PYGdefault{o}{*}\PYGdefault{p}{)}\PYGdefault{n}{buffer}\PYGdefault{p}{,} \PYGdefault{l+s}{\PYGdefaultZdq{} \PYGdefaultZdq{}}\PYGdefault{p}{);}

			\PYGdefault{c+c1}{// quit session if command is exit}
			\PYGdefault{k}{if}\PYGdefault{p}{(}\PYGdefault{o}{!}\PYGdefault{n}{strcmp}\PYGdefault{p}{(}\PYGdefault{n}{token}\PYGdefault{p}{,} \PYGdefault{l+s}{\PYGdefaultZdq{}QUIT\PYGdefaultZdq{}}\PYGdefault{p}{))} \PYGdefault{k}{break}\PYGdefault{p}{;}

			\PYGdefault{c+c1}{// return 200 if USER is received, shouldn\PYGdefaultZsq{}t happen but here just in case}
			\PYGdefault{k}{if}\PYGdefault{p}{(}\PYGdefault{o}{!}\PYGdefault{n}{strcmp}\PYGdefault{p}{(}\PYGdefault{n}{token}\PYGdefault{p}{,} \PYGdefault{l+s}{\PYGdefaultZdq{}USER\PYGdefaultZdq{}}\PYGdefault{p}{))} \PYGdefault{n}{write}\PYGdefault{p}{(}\PYGdefault{n}{control\PYGdefaultZus{}connection\PYGdefaultZus{}fd}\PYGdefault{p}{,} \PYGdefault{n}{SRC200}\PYGdefault{p}{,} \PYGdefault{n}{SRC200LEN}\PYGdefault{p}{);}

			\PYGdefault{c+c1}{// port command to open the data connection}
			\PYGdefault{k}{else} \PYGdefault{k}{if} \PYGdefault{p}{(}\PYGdefault{o}{!}\PYGdefault{n}{strcmp}\PYGdefault{p}{(}\PYGdefault{n}{token}\PYGdefault{p}{,} \PYGdefault{l+s}{\PYGdefaultZdq{}PORT\PYGdefaultZdq{}}\PYGdefault{p}{))}
			\PYGdefault{p}{\PYGdefaultZob{}}
				\PYGdefault{c+c1}{// reinitialize the socket}
				\PYGdefault{n}{socket\PYGdefaultZus{}client\PYGdefaultZus{}fd} \PYGdefault{o}{=} \PYGdefault{n}{socket}\PYGdefault{p}{(}\PYGdefault{n}{AF\PYGdefaultZus{}INET}\PYGdefault{p}{,} \PYGdefault{n}{SOCK\PYGdefaultZus{}STREAM}\PYGdefault{p}{,} \PYGdefault{l+m+mi}{6}\PYGdefault{p}{);}
				\PYGdefault{k}{if} \PYGdefault{p}{(}\PYGdefault{n}{socket\PYGdefaultZus{}client\PYGdefaultZus{}fd} \PYGdefault{o}{==} \PYGdefault{o}{\PYGdefaultZhy{}}\PYGdefault{l+m+mi}{1}\PYGdefault{p}{)}
				\PYGdefault{p}{\PYGdefaultZob{}}
					\PYGdefault{n}{perror}\PYGdefault{p}{(}\PYGdefault{l+s}{\PYGdefaultZdq{}cannot create data socket\PYGdefaultZdq{}}\PYGdefault{p}{);}
					\PYGdefault{n}{exit}\PYGdefault{p}{(}\PYGdefault{n}{EXIT\PYGdefaultZus{}FAILURE}\PYGdefault{p}{);}
				\PYGdefault{p}{\PYGdefaultZcb{}}
				\PYGdefault{c+c1}{// retrieve port number for client data connection}
				\PYGdefault{n}{token} \PYGdefault{o}{=} \PYGdefault{n}{strtok}\PYGdefault{p}{(}\PYGdefault{n+nb}{NULL}\PYGdefault{p}{,} \PYGdefault{l+s}{\PYGdefaultZdq{},\PYGdefaultZdq{}}\PYGdefault{p}{);}
				\PYGdefault{k}{for} \PYGdefault{p}{(}\PYGdefault{k+kt}{int} \PYGdefault{n}{i} \PYGdefault{o}{=} \PYGdefault{l+m+mi}{0}\PYGdefault{p}{;} \PYGdefault{n}{i} \PYGdefault{o}{\PYGdefaultZlt{}} \PYGdefault{l+m+mi}{4}\PYGdefault{p}{;} \PYGdefault{n}{i}\PYGdefault{o}{++}\PYGdefault{p}{)} \PYGdefault{n}{token} \PYGdefault{o}{=} \PYGdefault{n}{strtok}\PYGdefault{p}{(}\PYGdefault{n+nb}{NULL}\PYGdefault{p}{,} \PYGdefault{l+s}{\PYGdefaultZdq{},\PYGdefaultZdq{}}\PYGdefault{p}{);}

				\PYGdefault{k+kt}{unsigned} \PYGdefault{k+kt}{int} \PYGdefault{n}{client\PYGdefaultZus{}port}\PYGdefault{p}{[}\PYGdefault{l+m+mi}{2}\PYGdefault{p}{];}
				\PYGdefault{k}{for} \PYGdefault{p}{(}\PYGdefault{k+kt}{int} \PYGdefault{n}{i} \PYGdefault{o}{=} \PYGdefault{l+m+mi}{0}\PYGdefault{p}{;} \PYGdefault{n}{i} \PYGdefault{o}{\PYGdefaultZlt{}} \PYGdefault{l+m+mi}{2}\PYGdefault{p}{;} \PYGdefault{n}{i}\PYGdefault{o}{++}\PYGdefault{p}{)}
				\PYGdefault{p}{\PYGdefaultZob{}}
					\PYGdefault{n}{client\PYGdefaultZus{}port}\PYGdefault{p}{[}\PYGdefault{n}{i}\PYGdefault{p}{]} \PYGdefault{o}{=} \PYGdefault{n}{atoi}\PYGdefault{p}{(}\PYGdefault{n}{token}\PYGdefault{p}{);}
					\PYGdefault{k}{if} \PYGdefault{p}{(}\PYGdefault{n}{i} \PYGdefault{o}{==} \PYGdefault{l+m+mi}{1}\PYGdefault{p}{)} \PYGdefault{k}{break}\PYGdefault{p}{;}
					\PYGdefault{n}{token} \PYGdefault{o}{=} \PYGdefault{n}{strtok}\PYGdefault{p}{(}\PYGdefault{n+nb}{NULL}\PYGdefault{p}{,} \PYGdefault{l+s}{\PYGdefaultZdq{},\PYGdefaultZdq{}}\PYGdefault{p}{);}
				\PYGdefault{p}{\PYGdefaultZcb{}}

				\PYGdefault{c+c1}{// build client address struct}
				\PYGdefault{n}{memset}\PYGdefault{p}{(}\PYGdefault{o}{\PYGdefaultZam{}}\PYGdefault{n}{client\PYGdefaultZus{}addr}\PYGdefault{p}{,} \PYGdefault{l+m+mi}{0}\PYGdefault{p}{,} \PYGdefault{k}{sizeof} \PYGdefault{n}{client\PYGdefaultZus{}addr}\PYGdefault{p}{);}
				\PYGdefault{n}{client\PYGdefaultZus{}addr}\PYGdefault{p}{.}\PYGdefault{n}{sin\PYGdefaultZus{}family} \PYGdefault{o}{=} \PYGdefault{n}{AF\PYGdefaultZus{}INET}\PYGdefault{p}{;}
				\PYGdefault{n}{client\PYGdefaultZus{}addr}\PYGdefault{p}{.}\PYGdefault{n}{sin\PYGdefaultZus{}port} \PYGdefault{o}{=} \PYGdefault{n}{htons}\PYGdefault{p}{((}\PYGdefault{k+kt}{unsigned} \PYGdefault{k+kt}{short}\PYGdefault{p}{)((}\PYGdefault{n}{client\PYGdefaultZus{}port}\PYGdefault{p}{[}\PYGdefault{l+m+mi}{0}\PYGdefault{p}{]} \PYGdefault{o}{*} \PYGdefault{l+m+mi}{256}\PYGdefault{p}{)} \PYGdefault{o}{+} \PYGdefault{n}{client\PYGdefaultZus{}port}\PYGdefault{p}{[}\PYGdefault{l+m+mi}{1}\PYGdefault{p}{]));}
				\PYGdefault{n}{client\PYGdefaultZus{}addr}\PYGdefault{p}{.}\PYGdefault{n}{sin\PYGdefaultZus{}addr}\PYGdefault{p}{.}\PYGdefault{n}{s\PYGdefaultZus{}addr} \PYGdefault{o}{=} \PYGdefault{n}{inet\PYGdefaultZus{}addr}\PYGdefault{p}{(}\PYGdefault{l+s}{\PYGdefaultZdq{}127.0.0.1\PYGdefaultZdq{}}\PYGdefault{p}{);}

				\PYGdefault{c+c1}{// return success code for PORT command}
				\PYGdefault{n}{write}\PYGdefault{p}{(}\PYGdefault{n}{control\PYGdefaultZus{}connection\PYGdefaultZus{}fd}\PYGdefault{p}{,} \PYGdefault{n}{SRC200}\PYGdefault{p}{,} \PYGdefault{n}{SRC200LEN}\PYGdefault{p}{);}

				\PYGdefault{c+c1}{// connect to the client socket}
				\PYGdefault{k}{if} \PYGdefault{p}{(}\PYGdefault{n}{connect}\PYGdefault{p}{(}\PYGdefault{n}{socket\PYGdefaultZus{}client\PYGdefaultZus{}fd}\PYGdefault{p}{,} \PYGdefault{p}{(}\PYGdefault{k}{struct} \PYGdefault{n}{sockaddr} \PYGdefault{o}{*}\PYGdefault{p}{)}\PYGdefault{o}{\PYGdefaultZam{}}\PYGdefault{n}{client\PYGdefaultZus{}addr}\PYGdefault{p}{,} \PYGdefault{k}{sizeof} \PYGdefault{n}{client\PYGdefaultZus{}addr}\PYGdefault{p}{)} \PYGdefault{o}{==} \PYGdefault{o}{\PYGdefaultZhy{}}\PYGdefault{l+m+mi}{1}\PYGdefault{p}{)}
				\PYGdefault{p}{\PYGdefaultZob{}}
					\PYGdefault{n}{perror}\PYGdefault{p}{(}\PYGdefault{l+s}{\PYGdefaultZdq{}connection to client failed\PYGdefaultZdq{}}\PYGdefault{p}{);}
					\PYGdefault{n}{close}\PYGdefault{p}{(}\PYGdefault{n}{socket\PYGdefaultZus{}client\PYGdefaultZus{}fd}\PYGdefault{p}{);}
					\PYGdefault{n}{exit}\PYGdefault{p}{(}\PYGdefault{n}{EXIT\PYGdefaultZus{}FAILURE}\PYGdefault{p}{);}
				\PYGdefault{p}{\PYGdefaultZcb{}}
			\PYGdefault{p}{\PYGdefaultZcb{}}
			\PYGdefault{c+c1}{// ls}
			\PYGdefault{k}{else} \PYGdefault{k}{if} \PYGdefault{p}{(}\PYGdefault{o}{!}\PYGdefault{n}{strcmp}\PYGdefault{p}{(}\PYGdefault{n}{token}\PYGdefault{p}{,} \PYGdefault{l+s}{\PYGdefaultZdq{}LIST\PYGdefaultZdq{}}\PYGdefault{p}{))}
			\PYGdefault{p}{\PYGdefaultZob{}}
				\PYGdefault{c+c1}{// build command}
				\PYGdefault{n}{string} \PYGdefault{n}{command} \PYGdefault{o}{=} \PYGdefault{l+s}{\PYGdefaultZdq{}ls \PYGdefaultZhy{}l\PYGdefaultZdq{}}\PYGdefault{p}{;}
				\PYGdefault{n}{string} \PYGdefault{n}{command\PYGdefaultZus{}suffix} \PYGdefault{o}{=} \PYGdefault{l+s}{\PYGdefaultZdq{} \PYGdefaultZgt{} .results\PYGdefaultZdq{}}\PYGdefault{p}{;}
				\PYGdefault{n}{string} \PYGdefault{n}{path}\PYGdefault{p}{;}
				\PYGdefault{n}{token} \PYGdefault{o}{=} \PYGdefault{n}{strtok}\PYGdefault{p}{(}\PYGdefault{n+nb}{NULL}\PYGdefault{p}{,} \PYGdefault{l+s}{\PYGdefaultZdq{} \PYGdefaultZdq{}}\PYGdefault{p}{);}
				\PYGdefault{k}{if} \PYGdefault{p}{(}\PYGdefault{n}{token} \PYGdefault{o}{!=} \PYGdefault{n+nb}{NULL}\PYGdefault{p}{)}
				\PYGdefault{p}{\PYGdefaultZob{}}
					\PYGdefault{n}{path} \PYGdefault{o}{=} \PYGdefault{n}{string}\PYGdefault{p}{(}\PYGdefault{n}{token}\PYGdefault{p}{);}
					\PYGdefault{n}{command} \PYGdefault{o}{+=} \PYGdefault{l+s}{\PYGdefaultZdq{} \PYGdefaultZdq{}} \PYGdefault{o}{+} \PYGdefault{n}{path}\PYGdefault{p}{;}
				\PYGdefault{p}{\PYGdefaultZcb{}}
				\PYGdefault{n}{command} \PYGdefault{o}{+=} \PYGdefault{n}{command\PYGdefaultZus{}suffix}\PYGdefault{p}{;}

				\PYGdefault{c+c1}{// call ls and write it to results (a temporary file)}
				\PYGdefault{n}{remove}\PYGdefault{p}{(}\PYGdefault{l+s}{\PYGdefaultZdq{}.results\PYGdefaultZdq{}}\PYGdefault{p}{);}
				\PYGdefault{n}{system}\PYGdefault{p}{(}\PYGdefault{n}{command}\PYGdefault{p}{.}\PYGdefault{n}{c\PYGdefaultZus{}str}\PYGdefault{p}{());}

				\PYGdefault{c+c1}{// open the file and read from it}
				\PYGdefault{k+kt}{FILE}\PYGdefault{o}{*} \PYGdefault{n}{results} \PYGdefault{o}{=} \PYGdefault{n}{fopen}\PYGdefault{p}{(}\PYGdefault{l+s}{\PYGdefaultZdq{}.results\PYGdefaultZdq{}}\PYGdefault{p}{,} \PYGdefault{l+s}{\PYGdefaultZdq{}r\PYGdefaultZdq{}}\PYGdefault{p}{);}
				\PYGdefault{k+kt}{char} \PYGdefault{n}{buffer}\PYGdefault{p}{[}\PYGdefault{l+m+mi}{256}\PYGdefault{p}{];}
				\PYGdefault{k+kt}{char}\PYGdefault{o}{*} \PYGdefault{n}{size}\PYGdefault{p}{;}
				\PYGdefault{k+kt}{char}\PYGdefault{o}{*} \PYGdefault{n}{filename}\PYGdefault{p}{;}
				\PYGdefault{n}{stringstream} \PYGdefault{n}{ss}\PYGdefault{p}{;}

				\PYGdefault{c+c1}{//burn the first line}
				\PYGdefault{n}{fgets}\PYGdefault{p}{(}\PYGdefault{n}{buffer}\PYGdefault{p}{,} \PYGdefault{l+m+mi}{256}\PYGdefault{p}{,} \PYGdefault{n}{results}\PYGdefault{p}{);}

				\PYGdefault{c+c1}{// continue with the rest of the file}
				\PYGdefault{k}{while}\PYGdefault{p}{(}\PYGdefault{n}{fgets}\PYGdefault{p}{(}\PYGdefault{n}{buffer}\PYGdefault{p}{,} \PYGdefault{l+m+mi}{256}\PYGdefault{p}{,} \PYGdefault{n}{results}\PYGdefault{p}{))}
				\PYGdefault{p}{\PYGdefaultZob{}}
					\PYGdefault{c+c1}{// ignore carriage returns and new line characters}
					\PYGdefault{k}{for} \PYGdefault{p}{(}\PYGdefault{k+kt}{int} \PYGdefault{n}{x} \PYGdefault{o}{=} \PYGdefault{l+m+mi}{0}\PYGdefault{p}{;} \PYGdefault{p}{(}\PYGdefault{k+kt}{unsigned}\PYGdefault{p}{)}\PYGdefault{n}{x} \PYGdefault{o}{\PYGdefaultZlt{}} \PYGdefault{n}{strlen}\PYGdefault{p}{(}\PYGdefault{n}{buffer}\PYGdefault{p}{);} \PYGdefault{n}{x}\PYGdefault{o}{++}\PYGdefault{p}{)}
						\PYGdefault{k}{if} \PYGdefault{p}{(} \PYGdefault{n}{buffer}\PYGdefault{p}{[}\PYGdefault{n}{x}\PYGdefault{p}{]} \PYGdefault{o}{==} \PYGdefault{l+s+sc}{\PYGdefaultZsq{}\PYGdefaultZbs{}n\PYGdefaultZsq{}} \PYGdefault{o}{||} \PYGdefault{n}{buffer}\PYGdefault{p}{[}\PYGdefault{n}{x}\PYGdefault{p}{]} \PYGdefault{o}{==} \PYGdefault{l+s+sc}{\PYGdefaultZsq{}\PYGdefaultZbs{}r\PYGdefaultZsq{}} \PYGdefault{p}{)} \PYGdefault{n}{buffer}\PYGdefault{p}{[}\PYGdefault{n}{x}\PYGdefault{p}{]} \PYGdefault{o}{=} \PYGdefault{l+s+sc}{\PYGdefaultZsq{}\PYGdefaultZbs{}0\PYGdefaultZsq{}}\PYGdefault{p}{;}
					\PYGdefault{n}{size} \PYGdefault{o}{=} \PYGdefault{n}{strtok}\PYGdefault{p}{(}\PYGdefault{n}{buffer}\PYGdefault{p}{,} \PYGdefault{l+s}{\PYGdefaultZdq{} \PYGdefaultZdq{}}\PYGdefault{p}{);}
					\PYGdefault{k}{for} \PYGdefault{p}{(}\PYGdefault{k+kt}{int} \PYGdefault{n}{i} \PYGdefault{o}{=} \PYGdefault{l+m+mi}{0}\PYGdefault{p}{;} \PYGdefault{n}{i} \PYGdefault{o}{\PYGdefaultZlt{}} \PYGdefault{l+m+mi}{4}\PYGdefault{p}{;} \PYGdefault{n}{i}\PYGdefault{o}{++}\PYGdefault{p}{)} \PYGdefault{n}{size} \PYGdefault{o}{=} \PYGdefault{n}{strtok}\PYGdefault{p}{(}\PYGdefault{n+nb}{NULL}\PYGdefault{p}{,} \PYGdefault{l+s}{\PYGdefaultZdq{} \PYGdefaultZdq{}}\PYGdefault{p}{);}
					\PYGdefault{k}{for} \PYGdefault{p}{(}\PYGdefault{k+kt}{int} \PYGdefault{n}{i} \PYGdefault{o}{=} \PYGdefault{l+m+mi}{0}\PYGdefault{p}{;} \PYGdefault{n}{i} \PYGdefault{o}{\PYGdefaultZlt{}} \PYGdefault{l+m+mi}{4}\PYGdefault{p}{;} \PYGdefault{n}{i}\PYGdefault{o}{++}\PYGdefault{p}{)} \PYGdefault{n}{filename} \PYGdefault{o}{=} \PYGdefault{n}{strtok}\PYGdefault{p}{(}\PYGdefault{n+nb}{NULL}\PYGdefault{p}{,} \PYGdefault{l+s}{\PYGdefaultZdq{} \PYGdefaultZdq{}}\PYGdefault{p}{);}

					\PYGdefault{c+c1}{// add to the string stream}
					\PYGdefault{n}{ss} \PYGdefault{o}{\PYGdefaultZlt{}\PYGdefaultZlt{}} \PYGdefault{n}{filename} \PYGdefault{o}{\PYGdefaultZlt{}\PYGdefaultZlt{}} \PYGdefault{l+s}{\PYGdefaultZdq{}}\PYGdefault{l+s+se}{\PYGdefaultZbs{}t}\PYGdefault{l+s}{\PYGdefaultZdq{}} \PYGdefault{o}{\PYGdefaultZlt{}\PYGdefaultZlt{}} \PYGdefault{n}{size} \PYGdefault{o}{\PYGdefaultZlt{}\PYGdefaultZlt{}} \PYGdefault{l+s}{\PYGdefaultZdq{}}\PYGdefault{l+s+se}{\PYGdefaultZbs{}r\PYGdefaultZbs{}n}\PYGdefault{l+s}{\PYGdefaultZdq{}}\PYGdefault{p}{;}
				\PYGdefault{p}{\PYGdefaultZcb{}}
				\PYGdefault{n}{fclose}\PYGdefault{p}{(}\PYGdefault{n}{results}\PYGdefault{p}{);}
				\PYGdefault{n}{remove}\PYGdefault{p}{(}\PYGdefault{l+s}{\PYGdefaultZdq{}.results\PYGdefaultZdq{}}\PYGdefault{p}{);}

				\PYGdefault{c+c1}{// return code 125 \PYGdefaultZhy{} data connection already open; transfer starting}
				\PYGdefault{n}{write}\PYGdefault{p}{(}\PYGdefault{n}{control\PYGdefaultZus{}connection\PYGdefaultZus{}fd}\PYGdefault{p}{,} \PYGdefault{n}{SRC125}\PYGdefault{p}{,} \PYGdefault{n}{SRC125LEN}\PYGdefault{p}{);}

				\PYGdefault{c+c1}{// write the string to the client}
				\PYGdefault{n}{write}\PYGdefault{p}{(}\PYGdefault{n}{socket\PYGdefaultZus{}client\PYGdefaultZus{}fd}\PYGdefault{p}{,} \PYGdefault{n}{ss}\PYGdefault{p}{.}\PYGdefault{n}{str}\PYGdefault{p}{().}\PYGdefault{n}{c\PYGdefaultZus{}str}\PYGdefault{p}{(),} \PYGdefault{n}{ss}\PYGdefault{p}{.}\PYGdefault{n}{str}\PYGdefault{p}{().}\PYGdefault{n}{length}\PYGdefault{p}{());}
				\PYGdefault{n}{close}\PYGdefault{p}{(}\PYGdefault{n}{socket\PYGdefaultZus{}client\PYGdefaultZus{}fd}\PYGdefault{p}{);}

				\PYGdefault{c+c1}{// return code 226 \PYGdefaultZhy{} closing data connection. Requested file action successful}
				\PYGdefault{n}{write}\PYGdefault{p}{(}\PYGdefault{n}{control\PYGdefaultZus{}connection\PYGdefaultZus{}fd}\PYGdefault{p}{,} \PYGdefault{n}{SRC226}\PYGdefault{p}{,} \PYGdefault{n}{SRC226LEN}\PYGdefault{p}{);}
			\PYGdefault{p}{\PYGdefaultZcb{}}
			\PYGdefault{c+c1}{// check the type parameter and set the type boolean accordingly}
			\PYGdefault{k}{else} \PYGdefault{k}{if} \PYGdefault{p}{(}\PYGdefault{o}{!}\PYGdefault{n}{strcmp}\PYGdefault{p}{(}\PYGdefault{n}{token}\PYGdefault{p}{,} \PYGdefault{l+s}{\PYGdefaultZdq{}TYPE\PYGdefaultZdq{}}\PYGdefault{p}{))}
			\PYGdefault{p}{\PYGdefaultZob{}}
				\PYGdefault{n}{token} \PYGdefault{o}{=} \PYGdefault{n}{strtok}\PYGdefault{p}{(}\PYGdefault{n+nb}{NULL}\PYGdefault{p}{,} \PYGdefault{l+s}{\PYGdefaultZdq{} \PYGdefaultZdq{}}\PYGdefault{p}{);}
				\PYGdefault{k}{if} \PYGdefault{p}{(}\PYGdefault{o}{!}\PYGdefault{n}{strcmp}\PYGdefault{p}{(}\PYGdefault{n}{token}\PYGdefault{p}{,} \PYGdefault{l+s}{\PYGdefaultZdq{}I\PYGdefaultZdq{}}\PYGdefault{p}{))} \PYGdefault{n}{TYPEI} \PYGdefault{o}{=} \PYGdefault{n+nb}{true}\PYGdefault{p}{;}
				\PYGdefault{k}{else} \PYGdefault{n}{TYPEI} \PYGdefault{o}{=} \PYGdefault{n+nb}{false}\PYGdefault{p}{;}
				\PYGdefault{n}{write}\PYGdefault{p}{(}\PYGdefault{n}{control\PYGdefaultZus{}connection\PYGdefaultZus{}fd}\PYGdefault{p}{,} \PYGdefault{n}{SRC200}\PYGdefault{p}{,} \PYGdefault{n}{SRC200LEN}\PYGdefault{p}{);}
			\PYGdefault{p}{\PYGdefaultZcb{}}
			\PYGdefault{c+c1}{// check MODE}
			\PYGdefault{k}{else} \PYGdefault{k}{if} \PYGdefault{p}{(}\PYGdefault{o}{!}\PYGdefault{n}{strcmp}\PYGdefault{p}{(}\PYGdefault{n}{token}\PYGdefault{p}{,} \PYGdefault{l+s}{\PYGdefaultZdq{}MODE\PYGdefaultZdq{}}\PYGdefault{p}{))}
			\PYGdefault{p}{\PYGdefaultZob{}}
				\PYGdefault{n}{token} \PYGdefault{o}{=} \PYGdefault{n}{strtok}\PYGdefault{p}{(}\PYGdefault{n+nb}{NULL}\PYGdefault{p}{,} \PYGdefault{l+s}{\PYGdefaultZdq{} \PYGdefaultZdq{}}\PYGdefault{p}{);}
				\PYGdefault{k}{if} \PYGdefault{p}{(}\PYGdefault{o}{!}\PYGdefault{n}{strcmp}\PYGdefault{p}{(}\PYGdefault{n}{token}\PYGdefault{p}{,} \PYGdefault{l+s}{\PYGdefaultZdq{}S\PYGdefaultZdq{}}\PYGdefault{p}{))} \PYGdefault{n}{write}\PYGdefault{p}{(}\PYGdefault{n}{control\PYGdefaultZus{}connection\PYGdefaultZus{}fd}\PYGdefault{p}{,} \PYGdefault{n}{SRC200}\PYGdefault{p}{,} \PYGdefault{n}{SRC200LEN}\PYGdefault{p}{);}
				\PYGdefault{k}{else} \PYGdefault{n}{write}\PYGdefault{p}{(}\PYGdefault{n}{control\PYGdefaultZus{}connection\PYGdefaultZus{}fd}\PYGdefault{p}{,} \PYGdefault{n}{SRC504}\PYGdefault{p}{,} \PYGdefault{n}{SRC504LEN}\PYGdefault{p}{);}
			\PYGdefault{p}{\PYGdefaultZcb{}}
			\PYGdefault{c+c1}{// check STRU}
			\PYGdefault{k}{else} \PYGdefault{k}{if} \PYGdefault{p}{(}\PYGdefault{o}{!}\PYGdefault{n}{strcmp}\PYGdefault{p}{(}\PYGdefault{n}{token}\PYGdefault{p}{,} \PYGdefault{l+s}{\PYGdefaultZdq{}STRU\PYGdefaultZdq{}}\PYGdefault{p}{))}
			\PYGdefault{p}{\PYGdefaultZob{}}
				\PYGdefault{n}{token} \PYGdefault{o}{=} \PYGdefault{n}{strtok}\PYGdefault{p}{(}\PYGdefault{n+nb}{NULL}\PYGdefault{p}{,} \PYGdefault{l+s}{\PYGdefaultZdq{} \PYGdefaultZdq{}}\PYGdefault{p}{);}
				\PYGdefault{k}{if} \PYGdefault{p}{(}\PYGdefault{o}{!}\PYGdefault{n}{strcmp}\PYGdefault{p}{(}\PYGdefault{n}{token}\PYGdefault{p}{,} \PYGdefault{l+s}{\PYGdefaultZdq{}F\PYGdefaultZdq{}}\PYGdefault{p}{))} \PYGdefault{n}{write}\PYGdefault{p}{(}\PYGdefault{n}{control\PYGdefaultZus{}connection\PYGdefaultZus{}fd}\PYGdefault{p}{,} \PYGdefault{n}{SRC200}\PYGdefault{p}{,} \PYGdefault{n}{SRC200LEN}\PYGdefault{p}{);}
				\PYGdefault{k}{else} \PYGdefault{n}{write}\PYGdefault{p}{(}\PYGdefault{n}{control\PYGdefaultZus{}connection\PYGdefaultZus{}fd}\PYGdefault{p}{,} \PYGdefault{n}{SRC504}\PYGdefault{p}{,} \PYGdefault{n}{SRC504LEN}\PYGdefault{p}{);}
			\PYGdefault{p}{\PYGdefaultZcb{}}
			\PYGdefault{c+c1}{// no operation}
			\PYGdefault{k}{else} \PYGdefault{k}{if} \PYGdefault{p}{(}\PYGdefault{o}{!}\PYGdefault{n}{strcmp}\PYGdefault{p}{(}\PYGdefault{n}{token}\PYGdefault{p}{,} \PYGdefault{l+s}{\PYGdefaultZdq{}NOOP\PYGdefaultZdq{}}\PYGdefault{p}{))} \PYGdefault{n}{write}\PYGdefault{p}{(}\PYGdefault{n}{control\PYGdefaultZus{}connection\PYGdefaultZus{}fd}\PYGdefault{p}{,} \PYGdefault{n}{SRC200}\PYGdefault{p}{,} \PYGdefault{n}{SRC200LEN}\PYGdefault{p}{);}

			\PYGdefault{c+c1}{// retrieve}
			\PYGdefault{k}{else} \PYGdefault{k}{if} \PYGdefault{p}{(}\PYGdefault{o}{!}\PYGdefault{n}{strcmp}\PYGdefault{p}{(}\PYGdefault{n}{token}\PYGdefault{p}{,} \PYGdefault{l+s}{\PYGdefaultZdq{}RETR\PYGdefaultZdq{}}\PYGdefault{p}{))}
			\PYGdefault{p}{\PYGdefaultZob{}}
				\PYGdefault{c+c1}{// check that the type is binary first}
				\PYGdefault{k}{if} \PYGdefault{p}{(}\PYGdefault{o}{!}\PYGdefault{n}{TYPEI}\PYGdefault{p}{)}
				\PYGdefault{p}{\PYGdefaultZob{}}
					\PYGdefault{n}{write}\PYGdefault{p}{(}\PYGdefault{n}{control\PYGdefaultZus{}connection\PYGdefaultZus{}fd}\PYGdefault{p}{,} \PYGdefault{n}{SRC451}\PYGdefault{p}{,} \PYGdefault{n}{SRC451LEN}\PYGdefault{p}{);}
					\PYGdefault{k}{continue}\PYGdefault{p}{;}
				\PYGdefault{p}{\PYGdefaultZcb{}}
				\PYGdefault{c+c1}{// open the file}
				\PYGdefault{n}{token} \PYGdefault{o}{=} \PYGdefault{n}{strtok}\PYGdefault{p}{(}\PYGdefault{n+nb}{NULL} \PYGdefault{p}{,} \PYGdefault{l+s}{\PYGdefaultZdq{} }\PYGdefault{l+s+se}{\PYGdefaultZbs{}n\PYGdefaultZbs{}r}\PYGdefault{l+s}{\PYGdefaultZdq{}}\PYGdefault{p}{);}
				\PYGdefault{k+kt}{FILE}\PYGdefault{o}{*} \PYGdefault{n}{retr\PYGdefaultZus{}file} \PYGdefault{o}{=} \PYGdefault{n}{fopen}\PYGdefault{p}{(}\PYGdefault{n}{token}\PYGdefault{p}{,} \PYGdefault{l+s}{\PYGdefaultZdq{}rb\PYGdefaultZdq{}}\PYGdefault{p}{);}
				\PYGdefault{k}{if} \PYGdefault{p}{(}\PYGdefault{n}{retr\PYGdefaultZus{}file} \PYGdefault{o}{==} \PYGdefault{n+nb}{NULL}\PYGdefault{p}{)}
				\PYGdefault{p}{\PYGdefaultZob{}}
					\PYGdefault{n}{perror}\PYGdefault{p}{(}\PYGdefault{l+s}{\PYGdefaultZdq{}could not open server\PYGdefaultZhy{}side file\PYGdefaultZdq{}}\PYGdefault{p}{);}
					\PYGdefault{n}{fclose}\PYGdefault{p}{(}\PYGdefault{n}{retr\PYGdefaultZus{}file}\PYGdefault{p}{);}
					\PYGdefault{n}{exit}\PYGdefault{p}{(}\PYGdefault{n}{EXIT\PYGdefaultZus{}FAILURE}\PYGdefault{p}{);}
				\PYGdefault{p}{\PYGdefaultZcb{}}
				\PYGdefault{c+c1}{// get the file size}
				\PYGdefault{n}{fseek}\PYGdefault{p}{(}\PYGdefault{n}{retr\PYGdefaultZus{}file}\PYGdefault{p}{,} \PYGdefault{l+m+mi}{0}\PYGdefault{p}{,} \PYGdefault{n}{SEEK\PYGdefaultZus{}END}\PYGdefault{p}{);}
				\PYGdefault{k+kt}{int} \PYGdefault{n}{filesize} \PYGdefault{o}{=} \PYGdefault{n}{ftell}\PYGdefault{p}{(}\PYGdefault{n}{retr\PYGdefaultZus{}file}\PYGdefault{p}{);}
				\PYGdefault{n}{fseek}\PYGdefault{p}{(}\PYGdefault{n}{retr\PYGdefaultZus{}file}\PYGdefault{p}{,} \PYGdefault{l+m+mi}{0}\PYGdefault{p}{,} \PYGdefault{n}{SEEK\PYGdefaultZus{}SET}\PYGdefault{p}{);}

				\PYGdefault{c+c1}{// return code 125}
				\PYGdefault{n}{write}\PYGdefault{p}{(}\PYGdefault{n}{control\PYGdefaultZus{}connection\PYGdefaultZus{}fd}\PYGdefault{p}{,} \PYGdefault{n}{SRC125}\PYGdefault{p}{,} \PYGdefault{n}{SRC125LEN}\PYGdefault{p}{);}

				\PYGdefault{c+c1}{// read the file into a buffer}
				\PYGdefault{k+kt}{char} \PYGdefault{n}{retr\PYGdefaultZus{}buffer}\PYGdefault{p}{[}\PYGdefault{l+m+mi}{1024}\PYGdefault{p}{];}
				\PYGdefault{k}{while} \PYGdefault{p}{(}\PYGdefault{n}{filesize} \PYGdefault{o}{\PYGdefaultZgt{}} \PYGdefault{l+m+mi}{1024}\PYGdefault{p}{)}
				\PYGdefault{p}{\PYGdefaultZob{}}
					\PYGdefault{n}{fread}\PYGdefault{p}{(}\PYGdefault{n}{retr\PYGdefaultZus{}buffer}\PYGdefault{p}{,} \PYGdefault{l+m+mi}{1024}\PYGdefault{p}{,} \PYGdefault{l+m+mi}{1}\PYGdefault{p}{,} \PYGdefault{n}{retr\PYGdefaultZus{}file}\PYGdefault{p}{);}

					\PYGdefault{c+c1}{// write to the client}
					\PYGdefault{n}{write}\PYGdefault{p}{(}\PYGdefault{n}{socket\PYGdefaultZus{}client\PYGdefaultZus{}fd}\PYGdefault{p}{,} \PYGdefault{n}{retr\PYGdefaultZus{}buffer}\PYGdefault{p}{,} \PYGdefault{l+m+mi}{1024}\PYGdefault{p}{);}

					\PYGdefault{c+c1}{// update filesize}
					\PYGdefault{n}{filesize} \PYGdefault{o}{\PYGdefaultZhy{}=} \PYGdefault{l+m+mi}{1024}\PYGdefault{p}{;}
				\PYGdefault{p}{\PYGdefaultZcb{}}

				\PYGdefault{k}{if} \PYGdefault{p}{(}\PYGdefault{n}{filesize} \PYGdefault{o}{!=} \PYGdefault{l+m+mi}{0}\PYGdefault{p}{)}
				\PYGdefault{p}{\PYGdefaultZob{}}
					\PYGdefault{n}{fread}\PYGdefault{p}{(}\PYGdefault{n}{retr\PYGdefaultZus{}buffer}\PYGdefault{p}{,} \PYGdefault{n}{filesize}\PYGdefault{p}{,} \PYGdefault{l+m+mi}{1}\PYGdefault{p}{,} \PYGdefault{n}{retr\PYGdefaultZus{}file}\PYGdefault{p}{);}

					\PYGdefault{c+c1}{// write to the client}
					\PYGdefault{n}{write}\PYGdefault{p}{(}\PYGdefault{n}{socket\PYGdefaultZus{}client\PYGdefaultZus{}fd}\PYGdefault{p}{,} \PYGdefault{n}{retr\PYGdefaultZus{}buffer}\PYGdefault{p}{,} \PYGdefault{n}{filesize}\PYGdefault{p}{);}
				\PYGdefault{p}{\PYGdefaultZcb{}}
				\PYGdefault{c+c1}{// close the stuffs}
				\PYGdefault{n}{fclose}\PYGdefault{p}{(}\PYGdefault{n}{retr\PYGdefaultZus{}file}\PYGdefault{p}{);}
				\PYGdefault{n}{close}\PYGdefault{p}{(}\PYGdefault{n}{socket\PYGdefaultZus{}client\PYGdefaultZus{}fd}\PYGdefault{p}{);}

				\PYGdefault{c+c1}{// send 226 back to the client}
				\PYGdefault{n}{write}\PYGdefault{p}{(}\PYGdefault{n}{control\PYGdefaultZus{}connection\PYGdefaultZus{}fd}\PYGdefault{p}{,} \PYGdefault{n}{SRC226}\PYGdefault{p}{,} \PYGdefault{n}{SRC226LEN}\PYGdefault{p}{);}
			\PYGdefault{p}{\PYGdefaultZcb{}}
			\PYGdefault{c+c1}{// store file on the server}
			\PYGdefault{k}{else} \PYGdefault{k}{if} \PYGdefault{p}{(}\PYGdefault{o}{!}\PYGdefault{n}{strcmp}\PYGdefault{p}{(}\PYGdefault{n}{token}\PYGdefault{p}{,} \PYGdefault{l+s}{\PYGdefaultZdq{}STOR\PYGdefaultZdq{}}\PYGdefault{p}{))}
			\PYGdefault{p}{\PYGdefaultZob{}}
				\PYGdefault{c+c1}{// check that the type is binary first}
				\PYGdefault{k}{if} \PYGdefault{p}{(}\PYGdefault{o}{!}\PYGdefault{n}{TYPEI}\PYGdefault{p}{)}
				\PYGdefault{p}{\PYGdefaultZob{}}
					\PYGdefault{n}{write}\PYGdefault{p}{(}\PYGdefault{n}{control\PYGdefaultZus{}connection\PYGdefaultZus{}fd}\PYGdefault{p}{,} \PYGdefault{n}{SRC451}\PYGdefault{p}{,} \PYGdefault{n}{SRC451LEN}\PYGdefault{p}{);}
					\PYGdefault{k}{continue}\PYGdefault{p}{;}
				\PYGdefault{p}{\PYGdefaultZcb{}}
				\PYGdefault{c+c1}{// open the file}
				\PYGdefault{n}{token} \PYGdefault{o}{=} \PYGdefault{n}{strtok}\PYGdefault{p}{(}\PYGdefault{n+nb}{NULL} \PYGdefault{p}{,} \PYGdefault{l+s}{\PYGdefaultZdq{} }\PYGdefault{l+s+se}{\PYGdefaultZbs{}n\PYGdefaultZbs{}r}\PYGdefault{l+s}{\PYGdefaultZdq{}}\PYGdefault{p}{);}
				\PYGdefault{k+kt}{int} \PYGdefault{n}{stor\PYGdefaultZus{}file} \PYGdefault{o}{=} \PYGdefault{n}{open}\PYGdefault{p}{(}\PYGdefault{n}{token}\PYGdefault{p}{,} \PYGdefault{n}{O\PYGdefaultZus{}CREAT} \PYGdefault{o}{|} \PYGdefault{n}{O\PYGdefaultZus{}TRUNC} \PYGdefault{o}{|} \PYGdefault{n}{O\PYGdefaultZus{}RDWR}\PYGdefault{p}{,} \PYGdefault{n}{S\PYGdefaultZus{}IRWXU}\PYGdefault{p}{);}
				\PYGdefault{k}{if} \PYGdefault{p}{(}\PYGdefault{n}{stor\PYGdefaultZus{}file} \PYGdefault{o}{==} \PYGdefault{o}{\PYGdefaultZhy{}}\PYGdefault{l+m+mi}{1}\PYGdefault{p}{)}
				\PYGdefault{p}{\PYGdefaultZob{}}
					\PYGdefault{n}{perror}\PYGdefault{p}{(}\PYGdefault{l+s}{\PYGdefaultZdq{}could not create server\PYGdefaultZhy{}side file\PYGdefaultZdq{}}\PYGdefault{p}{);}
					\PYGdefault{n}{close}\PYGdefault{p}{(}\PYGdefault{n}{stor\PYGdefaultZus{}file}\PYGdefault{p}{);}
					\PYGdefault{n}{exit}\PYGdefault{p}{(}\PYGdefault{n}{EXIT\PYGdefaultZus{}FAILURE}\PYGdefault{p}{);}
				\PYGdefault{p}{\PYGdefaultZcb{}}
				\PYGdefault{c+c1}{// start reading from the client}
				\PYGdefault{k+kt}{char} \PYGdefault{n}{buffer}\PYGdefault{p}{[}\PYGdefault{l+m+mi}{1024}\PYGdefault{p}{];}

				\PYGdefault{c+c1}{// return code 125}
				\PYGdefault{n}{write}\PYGdefault{p}{(}\PYGdefault{n}{control\PYGdefaultZus{}connection\PYGdefaultZus{}fd}\PYGdefault{p}{,} \PYGdefault{n}{SRC125}\PYGdefault{p}{,} \PYGdefault{n}{SRC125LEN}\PYGdefault{p}{);}
				\PYGdefault{k+kt}{int} \PYGdefault{n}{bytes}\PYGdefault{p}{;}
				\PYGdefault{k}{while} \PYGdefault{p}{((}\PYGdefault{n}{bytes} \PYGdefault{o}{=} \PYGdefault{n}{read}\PYGdefault{p}{(}\PYGdefault{n}{socket\PYGdefaultZus{}client\PYGdefaultZus{}fd}\PYGdefault{p}{,} \PYGdefault{n}{buffer}\PYGdefault{p}{,} \PYGdefault{l+m+mi}{1024}\PYGdefault{p}{))} \PYGdefault{o}{\PYGdefaultZgt{}} \PYGdefault{l+m+mi}{0}\PYGdefault{p}{)} \PYGdefault{n}{write}\PYGdefault{p}{(}\PYGdefault{n}{stor\PYGdefaultZus{}file}\PYGdefault{p}{,} \PYGdefault{n}{buffer}\PYGdefault{p}{,} \PYGdefault{n}{bytes}\PYGdefault{p}{);}

				\PYGdefault{c+c1}{// close and finish}
				\PYGdefault{n}{close}\PYGdefault{p}{(}\PYGdefault{n}{stor\PYGdefaultZus{}file}\PYGdefault{p}{);}
				\PYGdefault{n}{close}\PYGdefault{p}{(}\PYGdefault{n}{socket\PYGdefaultZus{}client\PYGdefaultZus{}fd}\PYGdefault{p}{);}

				\PYGdefault{c+c1}{// send 226 back to the client}
				\PYGdefault{n}{write}\PYGdefault{p}{(}\PYGdefault{n}{control\PYGdefaultZus{}connection\PYGdefaultZus{}fd}\PYGdefault{p}{,} \PYGdefault{n}{SRC226}\PYGdefault{p}{,} \PYGdefault{n}{SRC226LEN}\PYGdefault{p}{);}
			\PYGdefault{p}{\PYGdefaultZcb{}}
		\PYGdefault{p}{\PYGdefaultZcb{}}
		\PYGdefault{c+c1}{// return code 221 \PYGdefaultZhy{} service closing control connection}
		\PYGdefault{n}{write}\PYGdefault{p}{(}\PYGdefault{n}{control\PYGdefaultZus{}connection\PYGdefaultZus{}fd}\PYGdefault{p}{,} \PYGdefault{n}{SRC221}\PYGdefault{p}{,} \PYGdefault{n}{SRC221LEN}\PYGdefault{p}{);}

		\PYGdefault{c+c1}{// shutdown the control and data connections, check if unsuccessful}
		\PYGdefault{k}{if} \PYGdefault{p}{(}\PYGdefault{n}{shutdown}\PYGdefault{p}{(}\PYGdefault{n}{control\PYGdefaultZus{}connection\PYGdefaultZus{}fd}\PYGdefault{p}{,} \PYGdefault{n}{SHUT\PYGdefaultZus{}RDWR}\PYGdefault{p}{)} \PYGdefault{o}{==} \PYGdefault{o}{\PYGdefaultZhy{}}\PYGdefault{l+m+mi}{1}\PYGdefault{p}{)}
		\PYGdefault{p}{\PYGdefaultZob{}}
			\PYGdefault{n}{perror}\PYGdefault{p}{(}\PYGdefault{l+s}{\PYGdefaultZdq{}shutdown failed\PYGdefaultZdq{}}\PYGdefault{p}{);}
			\PYGdefault{n}{close}\PYGdefault{p}{(}\PYGdefault{n}{control\PYGdefaultZus{}connection\PYGdefaultZus{}fd}\PYGdefault{p}{);}
			\PYGdefault{n}{close}\PYGdefault{p}{(}\PYGdefault{n}{socket\PYGdefaultZus{}control\PYGdefaultZus{}fd}\PYGdefault{p}{);}
			\PYGdefault{n}{exit}\PYGdefault{p}{(}\PYGdefault{n}{EXIT\PYGdefaultZus{}FAILURE}\PYGdefault{p}{);}
		\PYGdefault{p}{\PYGdefaultZcb{}}
		\PYGdefault{c+c1}{// set the socket as reusable to the kernel}
		\PYGdefault{k+kt}{int} \PYGdefault{n}{i} \PYGdefault{o}{=} \PYGdefault{l+m+mi}{1}\PYGdefault{p}{;}
		\PYGdefault{n}{setsockopt}\PYGdefault{p}{(}\PYGdefault{n}{socket\PYGdefaultZus{}control\PYGdefaultZus{}fd}\PYGdefault{p}{,} \PYGdefault{n}{SOL\PYGdefaultZus{}SOCKET}\PYGdefault{p}{,} \PYGdefault{n}{SO\PYGdefaultZus{}REUSEADDR}\PYGdefault{p}{,} \PYGdefault{o}{\PYGdefaultZam{}}\PYGdefault{n}{i}\PYGdefault{p}{,} \PYGdefault{k}{sizeof}\PYGdefault{p}{(}\PYGdefault{k+kt}{int}\PYGdefault{p}{));}
	\PYGdefault{p}{\PYGdefaultZcb{}}
	\PYGdefault{c+c1}{// close the stuffs, return}
	\PYGdefault{n}{close}\PYGdefault{p}{(}\PYGdefault{n}{socket\PYGdefaultZus{}control\PYGdefaultZus{}fd}\PYGdefault{p}{);}
	\PYGdefault{k}{return} \PYGdefault{n}{EXIT\PYGdefaultZus{}SUCCESS}\PYGdefault{p}{;}
\PYGdefault{p}{\PYGdefaultZcb{}}
\end{Verbatim}
