\begin{Verbatim}[commandchars=\\\{\}]
\PYGdefault{c+c1}{// Michael Eller mbe9a}
\PYGdefault{c+c1}{// OS Machine Problem 2}
\PYGdefault{c+c1}{// 29 Spetember 2016}
\PYGdefault{c+c1}{// barrier.cpp}

\PYGdefault{c+cp}{\PYGdefaultZsh{}include} \PYGdefault{c+cpf}{\PYGdefaultZdq{}barrier.h\PYGdefaultZdq{}}

\PYGdefault{c+c1}{// default constructor}
\PYGdefault{n}{Barrier}\PYGdefault{o}{::}\PYGdefault{n}{Barrier}\PYGdefault{p}{()}
\PYGdefault{p}{\PYGdefaultZob{}}
	\PYGdefault{c+c1}{// this don\PYGdefaultZsq{}t do nothin\PYGdefaultZsq{}}
\PYGdefault{p}{\PYGdefaultZcb{}}

\PYGdefault{c+c1}{// constructor}
\PYGdefault{n}{Barrier}\PYGdefault{o}{::}\PYGdefault{n}{Barrier}\PYGdefault{p}{(}\PYGdefault{k+kt}{int} \PYGdefault{n}{number\PYGdefaultZus{}of\PYGdefaultZus{}threads}\PYGdefault{p}{)}
\PYGdefault{p}{\PYGdefaultZob{}}
	\PYGdefault{c+c1}{// init variables}
	\PYGdefault{n}{counter} \PYGdefault{o}{=} \PYGdefault{l+m+mi}{0}\PYGdefault{p}{;}
	\PYGdefault{n}{max} \PYGdefault{o}{=} \PYGdefault{n}{number\PYGdefaultZus{}of\PYGdefaultZus{}threads}\PYGdefault{p}{;}
	\PYGdefault{c+c1}{// mutex for locking out all other threads when in wait()}
	\PYGdefault{n}{sem\PYGdefaultZus{}init}\PYGdefault{p}{(}\PYGdefault{o}{\PYGdefaultZam{}}\PYGdefault{n}{mutex}\PYGdefault{p}{,} \PYGdefault{l+m+mi}{0}\PYGdefault{p}{,} \PYGdefault{l+m+mi}{1}\PYGdefault{p}{);}
	\PYGdefault{c+c1}{// waiter binary semaphore to hold all waiting threads}
	\PYGdefault{n}{sem\PYGdefaultZus{}init}\PYGdefault{p}{(}\PYGdefault{o}{\PYGdefaultZam{}}\PYGdefault{n}{waiter}\PYGdefault{p}{,} \PYGdefault{l+m+mi}{0}\PYGdefault{p}{,} \PYGdefault{l+m+mi}{0}\PYGdefault{p}{);}
	\PYGdefault{c+c1}{// binary semaphore to ensure that only one thread is released at a time \PYGdefaultZhy{}\PYGdefaultZhy{}}
	\PYGdefault{c+c1}{// to ensure that binary semaphore is not violated}
	\PYGdefault{n}{sem\PYGdefaultZus{}init}\PYGdefault{p}{(}\PYGdefault{o}{\PYGdefaultZam{}}\PYGdefault{n}{handshake}\PYGdefault{p}{,} \PYGdefault{l+m+mi}{0}\PYGdefault{p}{,} \PYGdefault{l+m+mi}{0}\PYGdefault{p}{);}
\PYGdefault{p}{\PYGdefaultZcb{}}

\PYGdefault{c+c1}{// method used to wait on the barrier \PYGdefaultZhy{}\PYGdefaultZhy{}}
\PYGdefault{c+c1}{// threads will be released when the number of threads that}
\PYGdefault{c+c1}{// have called wait() == max}
\PYGdefault{k+kt}{void} \PYGdefault{n}{Barrier}\PYGdefault{o}{::}\PYGdefault{n}{wait}\PYGdefault{p}{()}
\PYGdefault{p}{\PYGdefaultZob{}}
	\PYGdefault{c+c1}{// block other threads}
	\PYGdefault{n}{sem\PYGdefaultZus{}wait}\PYGdefault{p}{(}\PYGdefault{o}{\PYGdefaultZam{}}\PYGdefault{n}{mutex}\PYGdefault{p}{);}

	\PYGdefault{c+c1}{// increment counter}
	\PYGdefault{n}{counter}\PYGdefault{o}{++}\PYGdefault{p}{;}

	\PYGdefault{c+c1}{// if all are waiting}
	\PYGdefault{k}{if} \PYGdefault{p}{(}\PYGdefault{n}{counter} \PYGdefault{o}{==} \PYGdefault{n}{max}\PYGdefault{p}{)}
	\PYGdefault{p}{\PYGdefaultZob{}}
		\PYGdefault{c+c1}{// reset counter}
		\PYGdefault{n}{counter} \PYGdefault{o}{=} \PYGdefault{l+m+mi}{0}\PYGdefault{p}{;}

		\PYGdefault{c+c1}{// release the \PYGdefaultZsq{}barrier\PYGdefaultZsq{}}
		\PYGdefault{k}{for} \PYGdefault{p}{(}\PYGdefault{k+kt}{int} \PYGdefault{n}{i} \PYGdefault{o}{=} \PYGdefault{l+m+mi}{0}\PYGdefault{p}{;} \PYGdefault{n}{i} \PYGdefault{o}{\PYGdefaultZlt{}} \PYGdefault{n}{max} \PYGdefault{o}{\PYGdefaultZhy{}} \PYGdefault{l+m+mi}{1}\PYGdefault{p}{;} \PYGdefault{n}{i}\PYGdefault{o}{++}\PYGdefault{p}{)} \PYGdefault{p}{\PYGdefaultZob{}}
			\PYGdefault{c+c1}{// release a single thread}
			\PYGdefault{n}{sem\PYGdefaultZus{}post}\PYGdefault{p}{(}\PYGdefault{o}{\PYGdefaultZam{}}\PYGdefault{n}{waiter}\PYGdefault{p}{);}

			\PYGdefault{c+c1}{// wait for the thread to be released \PYGdefaultZhy{}\PYGdefaultZhy{} essential so that the binary semaphore is not violated}
			\PYGdefault{n}{sem\PYGdefaultZus{}wait}\PYGdefault{p}{(}\PYGdefault{o}{\PYGdefaultZam{}}\PYGdefault{n}{handshake}\PYGdefault{p}{);}
		\PYGdefault{p}{\PYGdefaultZcb{}}
		\PYGdefault{c+c1}{// unlock mutex}
		\PYGdefault{n}{sem\PYGdefaultZus{}post}\PYGdefault{p}{(}\PYGdefault{o}{\PYGdefaultZam{}}\PYGdefault{n}{mutex}\PYGdefault{p}{);}
		\PYGdefault{k}{return}\PYGdefault{p}{;}
	\PYGdefault{p}{\PYGdefaultZcb{}}
	\PYGdefault{c+c1}{// unlock mutex and wait on waiter semaphore}
	\PYGdefault{n}{sem\PYGdefaultZus{}post}\PYGdefault{p}{(}\PYGdefault{o}{\PYGdefaultZam{}}\PYGdefault{n}{mutex}\PYGdefault{p}{);}
	\PYGdefault{n}{sem\PYGdefaultZus{}wait}\PYGdefault{p}{(}\PYGdefault{o}{\PYGdefaultZam{}}\PYGdefault{n}{waiter}\PYGdefault{p}{);}

	\PYGdefault{c+c1}{// allow barrier to continue releasing and exit}
	\PYGdefault{n}{sem\PYGdefaultZus{}post}\PYGdefault{p}{(}\PYGdefault{o}{\PYGdefaultZam{}}\PYGdefault{n}{handshake}\PYGdefault{p}{);}
	\PYGdefault{k}{return}\PYGdefault{p}{;}
\PYGdefault{p}{\PYGdefaultZcb{}}
\end{Verbatim}
